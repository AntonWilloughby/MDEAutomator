{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.1-experimental",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_EXPERIMENTAL_WARNING": "This template uses ARM features that are experimental. Experimental features should be enabled for testing purposes only, as there are no guarantees about the quality or stability of these features. Do not enable these settings for any production usage, or your production environment may be subject to breaking.",
    "_EXPERIMENTAL_FEATURES_ENABLED": [
      "Extensibility"
    ],
    "_generator": {
      "name": "bicep",
      "version": "0.35.1.17967",
      "templateHash": "2206781851962883383"
    }
  },
  "parameters": {
    "env": {
      "type": "string",
      "metadata": {
        "description": "Chose a variable for the environment. Example: dev, test, soc"
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Chose a Azure region. Example: eastus, westus, westeurope"
      }
    }
  },
  "variables": {
    "environmentid": "[uniqueString(tenant().tenantId, parameters('env'))]"
  },
  "resources": {
    "managedidentity": {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2024-11-30",
      "name": "[format('umi-mdeautomator-{0}', variables('environmentid'))]",
      "location": "[parameters('location')]"
    },
    "blobroleassign": {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(variables('environmentid'), 'ba92f5b4-2d11-453d-a403-e96b0029c9fe', subscription().id)]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
        "principalId": "[reference('managedidentity').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "managedidentity"
      ]
    },
    "monitorroleassign": {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(variables('environmentid'), '3913510d-42f4-4e42-8a64-420c390055eb', subscription().id)]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '3913510d-42f4-4e42-8a64-420c390055eb')]",
        "principalId": "[reference('managedidentity').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "managedidentity"
      ]
    },
    "storage01": {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2024-01-01",
      "name": "[format('stmdeauto{0}', variables('environmentid'))]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('umi-mdeautomator-{0}', variables('environmentid'))))]": {}
        }
      },
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {
        "encryption": {
          "keySource": "Microsoft.Storage",
          "requireInfrastructureEncryption": true,
          "services": {
            "blob": {
              "enabled": true
            },
            "file": {
              "enabled": true
            },
            "queue": {
              "enabled": true,
              "keyType": "Service"
            },
            "table": {
              "enabled": true,
              "keyType": "Service"
            }
          }
        },
        "allowBlobPublicAccess": false,
        "supportsHttpsTrafficOnly": true,
        "publicNetworkAccess": "Enabled",
        "minimumTlsVersion": "TLS1_2"
      },
      "dependsOn": [
        "managedidentity"
      ]
    },
    "blobservice": {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2024-01-01",
      "name": "[format('{0}/{1}', format('stmdeauto{0}', variables('environmentid')), 'default')]",
      "dependsOn": [
        "storage01"
      ]
    },
    "packagescontainer": {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2024-01-01",
      "name": "[format('{0}/{1}/{2}', format('stmdeauto{0}', variables('environmentid')), 'default', 'packages')]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "blobservice"
      ]
    },
    "filescontainer": {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2024-01-01",
      "name": "[format('{0}/{1}/{2}', format('stmdeauto{0}', variables('environmentid')), 'default', 'files')]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "blobservice"
      ]
    },
    "payloadscontainer": {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2024-01-01",
      "name": "[format('{0}/{1}/{2}', format('stmdeauto{0}', variables('environmentid')), 'default', 'payloads')]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "blobservice"
      ]
    },
    "outputcontainer": {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2024-01-01",
      "name": "[format('{0}/{1}/{2}', format('stmdeauto{0}', variables('environmentid')), 'default', 'output')]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "blobservice"
      ]
    },
    "detectionscontainer": {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2024-01-01",
      "name": "[format('{0}/{1}/{2}', format('stmdeauto{0}', variables('environmentid')), 'default', 'detections')]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "blobservice"
      ]
    },
    "appinsights01": {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[format('appi-mdeauto{0}', variables('environmentid'))]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "RetentionInDays": 60,
        "DisableLocalAuth": true
      }
    },
    "appservice": {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2024-04-01",
      "name": "[format('asp-mdeautomator-{0}', variables('environmentid'))]",
      "location": "[parameters('location')]",
      "properties": {
        "reserved": false,
        "elasticScaleEnabled": true,
        "maximumElasticWorkerCount": 2
      },
      "sku": {
        "tier": "ElasticPremium",
        "name": "EP1"
      }
    },
    "function01": {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2023-12-01",
      "name": "[format('funcmdeauto{0}', variables('environmentid'))]",
      "kind": "functionapp",
      "location": "[parameters('location')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('umi-mdeautomator-{0}', variables('environmentid'))))]": {}
        }
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('asp-mdeautomator-{0}', variables('environmentid')))]",
        "publicNetworkAccess": "Enabled",
        "httpsOnly": true,
        "siteConfig": {
          "autoHealEnabled": true,
          "detailedErrorLoggingEnabled": true,
          "httpLoggingEnabled": true,
          "cors": {
            "allowedOrigins": [
              "https://portal.azure.com",
              "https://preview.portal.azure.com"
            ],
            "supportCredentials": true
          },
          "preWarmedInstanceCount": 10,
          "remoteDebuggingEnabled": false,
          "requestTracingEnabled": true,
          "scmMinTlsVersion": "1.2",
          "http20Enabled": true,
          "functionAppScaleLimit": 100,
          "functionsRuntimeScaleMonitoringEnabled": true,
          "appSettings": [
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference('appinsights01').ConnectionString]"
            },
            {
              "name": "APPLICATIONINSIGHTS_AUTHENTICATION_STRING",
              "value": "[format('Authorization=AAD;ClientId={0}', reference('managedidentity').clientId)]"
            },
            {
              "name": "ApplicationInsightsAgent_EXTENSION_VERSION",
              "value": "~3"
            },
            {
              "name": "APPLICATIONINSIGHTS_ENABLE_AGENT",
              "value": "true"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "powershell"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', format('stmdeauto{0}', variables('environmentid')), listKeys(resourceId('Microsoft.Storage/storageAccounts', format('stmdeauto{0}', variables('environmentid'))), '2024-01-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', format('stmdeauto{0}', variables('environmentid')), listKeys(resourceId('Microsoft.Storage/storageAccounts', format('stmdeauto{0}', variables('environmentid'))), '2024-01-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "https://github.com/msdirtbag/MDEAutomator/raw/refs/heads/main/payloads/MDEAutomator.zip?isAsync=true"
            },
            {
              "name": "FUNCTIONS_WORKER_PROCESS_COUNT",
              "value": "10"
            },
            {
              "name": "PSWorkerInProcConcurrencyUpperBound",
              "value": "1000"
            },
            {
              "name": "AZURE_CLIENT_ID",
              "value": "[reference('managedidentity').clientId]"
            },
            {
              "name": "SUBSCRIPTION_ID",
              "value": "[subscription().subscriptionId]"
            },
            {
              "name": "STORAGE_ACCOUNT",
              "value": "[format('stmdeauto{0}', variables('environmentid'))]"
            },
            {
              "name": "SPNID",
              "value": ""
            }
          ],
          "use32BitWorkerProcess": false,
          "ftpsState": "Disabled",
          "powerShellVersion": "7.4",
          "netFrameworkVersion": "v8.0"
        }
      },
      "dependsOn": [
        "appinsights01",
        "appservice",
        "managedidentity",
        "storage01"
      ]
    }
  }
}